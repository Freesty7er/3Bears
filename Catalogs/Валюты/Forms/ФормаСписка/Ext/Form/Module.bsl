Функция СтруктураURI(Знач СтрокаURI) Экспорт
	
	СтрокаURI = СокрЛП(СтрокаURI);
	
	// схема
	Схема = "";
	Позиция = Найти(СтрокаURI, "://");
	Если Позиция > 0 Тогда
		Схема = НРег(Лев(СтрокаURI, Позиция - 1));
		СтрокаURI = Сред(СтрокаURI, Позиция + 3);
	КонецЕсли;

	// строка соединения и путь на сервере
	СтрокаСоединения = СтрокаURI;
	ПутьНаСервере = "";
	Позиция = Найти(СтрокаСоединения, "/");
	Если Позиция > 0 Тогда
		ПутьНаСервере = Сред(СтрокаСоединения, Позиция + 1);
		СтрокаСоединения = Лев(СтрокаСоединения, Позиция - 1);
	КонецЕсли;
		
	// информация пользователя и имя сервера
	СтрокаАвторизации = "";
	ИмяСервера = СтрокаСоединения;
	Позиция = Найти(СтрокаСоединения, "@");
	Если Позиция > 0 Тогда
		СтрокаАвторизации = Лев(СтрокаСоединения, Позиция - 1);
		ИмяСервера = Сред(СтрокаСоединения, Позиция + 1);
	КонецЕсли;
	
	// логин и пароль
	Логин = СтрокаАвторизации;
	Пароль = "";
	Позиция = Найти(СтрокаАвторизации, ":");
	Если Позиция > 0 Тогда
		Логин = Лев(СтрокаАвторизации, Позиция - 1);
		Пароль = Сред(СтрокаАвторизации, Позиция + 1);
	КонецЕсли;
	
	// хост и порт
	Хост = ИмяСервера;
	Порт = "";
	Позиция = Найти(ИмяСервера, ":");
	Если Позиция > 0 Тогда
		Хост = Лев(ИмяСервера, Позиция - 1);
		Порт = Сред(ИмяСервера, Позиция + 1);
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Схема", Схема);
	Результат.Вставить("Логин", Логин);
	Результат.Вставить("Пароль", Пароль);
	Результат.Вставить("ИмяСервера", ИмяСервера);
	Результат.Вставить("Хост", Хост);
	Результат.Вставить("Порт", ?(Порт <> "", Число(Порт), Неопределено));
	Результат.Вставить("ПутьНаСервере", ПутьНаСервере);
	
	Возврат Результат;
	
КонецФункции


Функция ПрочитатьАдрес(сервер, ресурсНаСервере, параметрыКоманды, ответСервера = Неопределено)
	
	Попытка
		соединение = Новый HTTPСоединение(сервер,,,,,,Новый ЗащищенноеСоединениеOpenSSL());
	Исключение
		Сообщить("Не удалось установить соединение с сервером:" 
			+ Символы.ПС + ИнформацияОбОшибке().Описание, СтатусСообщения.Важное);
		Возврат "";
	КонецПопытки;
	
	имяФайлаРезультата = ПолучитьИмяВременногоФайла();
	
	ресурсПараметры = РесурсНаСервере+"?"+параметрыКоманды;
	Если СтрДлина(ресурсПараметры) < 2000 Тогда 
		// GET 
		
		Попытка
			ответСервера = соединение.Получить(ресурсПараметры, имяФайлаРезультата);
			соединение = Неопределено;
		Исключение 
			Сообщить("Не удалось получить данные с сервера", СтатусСообщения.Важное);
			Возврат "";
		КонецПопытки;
			
	Иначе // POST	
		
		//Создаём файл отправки - содержимое POST-запроса. 
		имяФайлаОтправки = ПолучитьИмяВременногоФайла();
		
		файлОтправки = Новый ЗаписьТекста(имяФайлаОтправки, КодировкаТекста.ANSI, Символы.ПС, Ложь);
		файлОтправки.ЗаписатьСтроку(параметрыКоманды); 
		файлОтправки.Закрыть(); 

		//Формируем заголовок POST-запроса.
	    заголовокHTTP = Новый Соответствие();
	    заголовокHTTP.Вставить("Content-Type", "application/x-www-form-urlencoded");
		
		ФайлОтправки = Новый Файл(имяФайлаОтправки); 
		
		размерФайлаОтправки = XMLСтрока(ФайлОтправки.Размер()); 
		заголовокHTTP.Вставить("Content-Length", Строка(размерФайлаОтправки)); 

		Попытка
	 		ответСервера = соединение.ОтправитьДляОбработки(имяФайлаОтправки, ресурсНаСервере, имяФайлаРезультата, заголовокHTTP);
			соединение = Неопределено;
		Исключение 
			Сообщить("Не удалось получить данные с сервера:" + Символы.ПС + ИнформацияОбОшибке().Описание, СтатусСообщения.Важное);
			Возврат "";
		КонецПопытки;
		
	КонецЕсли;	
	
	куки = ответСервера.Заголовки.Получить("Set-Cookie");
	куки = СтрЗаменить(куки, ";", Символы.ПС);
	
	идентификаторСессии1 = СтрПолучитьСтроку(куки, 1);    
 
    Сообщить(ИдентификаторСессии1);
	
	Если ответСервера.КодСостояния = 301 Тогда
		
		перенаправление = ответСервера.Заголовки.Получить("Location");
		
		Сообщить("Код возврата " + ответСервера.КодСостояния);
		Сообщить("Нас перенаправили на " + перенаправление);
		
		
		URI = СтруктураURI(перенаправление);
		
		
	КонецЕсли;
	
	файлРезультата = Новый ЧтениеТекста(имяФайлаРезультата);
	
	рез = файлРезультата.ПрочитатьСтроку();
	
	// ответСервера.КодСостояния;
	// ответСервера.ПолучитьТелоКакСтроку();
	
	
	Возврат рез;

	
Конецфункции



&НаСервере
Процедура КомандаОбновитьВалютыНаСервере()
	
	СправочникВалютыСервер.ОбновитьСписокВалют();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьВалюты(Команда)
	
	КомандаОбновитьВалютыНаСервере();
	
	//ОповеститьОбИзменении("СправочникСсылка.Валюты");
	
	Элементы.Список.Обновить();
	
КонецПроцедуры
